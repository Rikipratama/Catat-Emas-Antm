<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Investasi Emas</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        :root {
            --bg-primary: #f8fafc;
            --bg-secondary: #ffffff;
            --text-primary: #1e293b;
            --text-secondary: #64748b;
            --gold-primary: #f59e0b;
            --gold-light: #fef3c7;
            --accent-color: #3b82f6;
            --success-color: #10b981;
            --danger-color: #ef4444;
            --border-light: #e2e8f0;
            --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1);
            --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1);
            --radius: 12px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: var(--bg-primary);
            color: var(--text-primary);
            line-height: 1.5;
            padding: 20px;
            min-height: 100vh;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .header {
            text-align: center;
            margin-bottom: 32px;
        }

        .header h1 {
            font-size: 2rem;
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: 8px;
        }

        .header p {
            color: var(--text-secondary);
            font-size: 1rem;
        }

        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin-bottom: 32px;
        }

        .stat-card {
            background: var(--bg-secondary);
            padding: 24px;
            border-radius: var(--radius);
            box-shadow: var(--shadow-sm);
            border: 1px solid var(--border-light);
            transition: all 0.2s ease;
            position: relative;
        }

        .stat-card:hover {
            box-shadow: var(--shadow-md);
            transform: translateY(-2px);
        }

        .stat-card.fokus {
            border: 2px solid var(--gold-primary);
            background: linear-gradient(135deg, #fffbeb 0%, #fef3c7 100%);
            transform: scale(1.02);
            box-shadow: var(--shadow-lg);
        }

        .stat-card h3 {
            font-size: 0.875rem;
            font-weight: 600;
            color: var(--text-secondary);
            margin-bottom: 12px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .stat-card .value {
            font-size: 1.875rem;
            font-weight: 700;
            color: var(--text-primary);
            line-height: 1.2;
            word-break: break-word;
        }

        .value.with-trend {
            display: flex;
            align-items: center;
            gap: 8px;
            flex-wrap: wrap;
        }

        .stat-trend {
            font-size: 1.25rem;
            display: inline-flex;
            align-items: center;
        }

        .stat-trend.up {
            color: var(--success-color);
        }

        .stat-trend.down {
            color: var(--danger-color);
        }

        .tooltip {
            position: relative;
            cursor: help;
        }

        .tooltip::after {
            content: attr(data-tooltip);
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            background: var(--text-primary);
            color: white;
            padding: 8px 12px;
            border-radius: 6px;
            font-size: 0.75rem;
            white-space: nowrap;
            opacity: 0;
            visibility: hidden;
            transition: all 0.2s ease;
            z-index: 10;
            margin-bottom: 8px;
        }

        .tooltip:hover::after {
            opacity: 1;
            visibility: visible;
        }

        .chart-section {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 24px;
            margin-bottom: 32px;
        }

        .chart-card {
            background: var(--bg-secondary);
            padding: 24px;
            border-radius: var(--radius);
            box-shadow: var(--shadow-sm);
            border: 1px solid var(--border-light);
        }

        .chart-card h3 {
            font-size: 1.125rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 20px;
            text-align: center;
        }

        .progress-section {
            background: var(--bg-secondary);
            padding: 24px;
            border-radius: var(--radius);
            box-shadow: var(--shadow-sm);
            border: 1px solid var(--border-light);
        }

        .progress-container {
            margin-bottom: 24px;
        }

        .progress-label {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .progress-percentage {
            color: var(--gold-primary);
            font-weight: 600;
        }

        .progress-bar {
            height: 8px;
            background: var(--border-light);
            border-radius: 4px;
            overflow: hidden;
        }

        .progress-bar-inner {
            height: 100%;
            background: linear-gradient(90deg, var(--gold-primary), #fbbf24);
            border-radius: 4px;
            transition: width 0.8s ease;
            position: relative;
        }

        .target-inputs {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 16px;
            margin-top: 20px;
        }

        .input-group {
            display: flex;
            flex-direction: column;
        }

        .input-group label {
            font-size: 0.75rem;
            font-weight: 600;
            color: var(--text-secondary);
            margin-bottom: 4px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .input-group input {
            padding: 12px;
            border: 1px solid var(--border-light);
            border-radius: 8px;
            font-size: 0.875rem;
            transition: all 0.2s ease;
            background: var(--bg-primary);
        }

        .input-group input:focus {
            outline: none;
            border-color: var(--gold-primary);
            box-shadow: 0 0 0 3px rgba(245, 158, 11, 0.1);
        }

        .motto-card {
            background: linear-gradient(135deg, var(--gold-primary), #f59e0b);
            color: white;
            padding: 32px;
            border-radius: var(--radius);
            text-align: center;
            font-size: 1.25rem;
            font-weight: 700;
            box-shadow: var(--shadow-md);
            margin-top: 32px;
        }

        .loader {
            text-align: center;
            padding: 60px 20px;
            color: var(--text-secondary);
        }

        .loader-spinner {
            width: 40px;
            height: 40px;
            margin: 0 auto 16px;
            border: 3px solid var(--border-light);
            border-top: 3px solid var(--gold-primary);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .chart-section {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            body {
                padding: 16px;
            }
            
            .dashboard-grid {
                grid-template-columns: 1fr;
                gap: 16px;
            }
            
            .chart-section {
                gap: 16px;
            }
            
            .stat-card {
                padding: 20px;
            }
            
            .stat-card .value {
                font-size: 1.5rem;
            }
            
            .target-inputs {
                grid-template-columns: 1fr;
            }
        }

        /* Chart styling */
        canvas {
            max-height: 300px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üí∞ Dashboard Investasi Emas</h1>
            <p>Monitor performa investasi emas Anda dengan mudah</p>
        </div>

        <div id="dashboard-loader" class="loader">
            <div class="loader-spinner"></div>
            <div>Memuat data dashboard...</div>
        </div>

        <div id="dashboard-content" style="display: none;">
            <!-- Statistics Cards -->
            <div class="dashboard-grid">
                <div class="stat-card">
                    <h3>üèÜ Total Aset Emas (Gr)</h3>
                    <div class="value" id="total-asset-gr">0</div>
                </div>
                <div class="stat-card">
                    <h3>üí∞ Modal Investasi</h3>
                    <div class="value" id="total-modal">Rp 0</div>
                </div>
                <div class="stat-card">
                    <h3>üíé Total Nilai Jual</h3>
                    <div class="value" id="total-nilai-jual">Rp 0</div>
                </div>
                <div class="stat-card fokus">
                    <h3>üìà Floating Untung/Rugi</h3>
                    <div class="value with-trend tooltip" id="floating-untung-rugi" data-tooltip="Kerugian atau keuntungan saat ini dibanding modal">
                        <span>Rp 0</span>
                        <span class="stat-trend" id="profit-trend"></span>
                    </div>
                </div>
                <div class="stat-card fokus">
                    <h3>üìä % Untung/Rugi</h3>
                    <div class="value with-trend tooltip" id="percentage-untung-rugi" data-tooltip="Persentase berdasarkan nilai jual dibanding modal">
                        <span>0%</span>
                        <span class="stat-trend" id="percentage-trend"></span>
                    </div>
                </div>
                <div class="stat-card">
                    <h3>‚ö° Avg. Asset Gold / Gr</h3>
                    <div class="value" id="avg-asset-gold-gr">Rp 0</div>
                </div>
            </div>

            <!-- Charts Section -->
            <div class="chart-section">
                <div class="chart-card">
                    <h3>üìà Estimasi Harga Jual vs Nominal Beli</h3>
                    <canvas id="lineChart"></canvas>
                </div>
                <div class="chart-card">
                    <h3>üìä Perbandingan Nilai</h3>
                    <canvas id="barChart"></canvas>
                </div>
            </div>

            <!-- Progress Section -->
            <div class="progress-section">
                <h3>üéØ Progress Target</h3>
                <div class="progress-container">
                    <div class="progress-label">
                        <span>ü•á Target Jumlah Emas</span>
                        <span class="progress-percentage" id="progress-emas-label">0%</span>
                    </div>
                    <div class="progress-bar">
                        <div id="progress-emas-inner" class="progress-bar-inner"></div>
                    </div>
                </div>
                <div class="progress-container">
                    <div class="progress-label">
                        <span>üí∞ Target Nilai Jual</span>
                        <span class="progress-percentage" id="progress-jual-label">0%</span>
                    </div>
                    <div class="progress-bar">
                        <div id="progress-jual-inner" class="progress-bar-inner"></div>
                    </div>
                </div>
                <div class="target-inputs">
                    <div class="input-group">
                        <label for="target-emas">üéØ Target Emas (Gr)</label>
                        <input type="number" id="target-emas" value="500" oninput="updateProgressBars()">
                    </div>
                    <div class="input-group">
                        <label for="target-jual">üíé Target Nilai Jual (Rp)</label>
                        <input type="number" id="target-jual" value="500000000" oninput="updateProgressBars()">
                    </div>
                </div>
            </div>

            <!-- Motto -->
            <div class="motto-card">
                üåü KONSISTEN ADALAH KUNCI SUKSES üåü
            </div>
        </div>
    </div>

    <script>
        let lineChartInstance, barChartInstance;
        let summaryDataCache;

        // Helper untuk format Rupiah
        const formatRp = (num) => 'Rp ' + Number(num || 0).toLocaleString('id-ID', { minimumFractionDigits: 0, maximumFractionDigits: 2 });

        // Fungsi untuk mengupdate semua kartu statistik dengan trend indicators
        function updateStatCards(summary) {
            document.getElementById('total-asset-gr').textContent = Number(summary.totalAssetGr || 0).toFixed(3).replace(/\.?0+$/, "");
            document.getElementById('total-modal').textContent = formatRp(summary.totalModal);
            document.getElementById('total-nilai-jual').textContent = formatRp(summary.totalNilaiJual);
            
            // Update floating profit/loss with trend indicator
            const floatingValue = summary.floatingUntungRugi || 0;
            const percentageValue = summary.percentageUntungRugi || 0;
            
            document.getElementById('floating-untung-rugi').querySelector('span').textContent = formatRp(floatingValue);
            document.getElementById('percentage-untung-rugi').querySelector('span').textContent = `${Number(percentageValue).toFixed(2)}%`;
            
            // Add trend arrows and colors
            const profitTrend = document.getElementById('profit-trend');
            const percentageTrend = document.getElementById('percentage-trend');
            
            if (floatingValue < 0) {
                profitTrend.innerHTML = 'üìâ';
                profitTrend.className = 'stat-trend down';
                document.getElementById('floating-untung-rugi').querySelector('span').style.color = 'var(--danger-color)';
            } else if (floatingValue > 0) {
                profitTrend.innerHTML = 'üìà';
                profitTrend.className = 'stat-trend up';
                document.getElementById('floating-untung-rugi').querySelector('span').style.color = 'var(--success-color)';
            } else {
                profitTrend.innerHTML = '‚ûñ';
                profitTrend.className = 'stat-trend';
                document.getElementById('floating-untung-rugi').querySelector('span').style.color = 'var(--text-primary)';
            }
            
            if (percentageValue < 0) {
                percentageTrend.innerHTML = 'üìâ';
                percentageTrend.className = 'stat-trend down';
                document.getElementById('percentage-untung-rugi').querySelector('span').style.color = 'var(--danger-color)';
            } else if (percentageValue > 0) {
                percentageTrend.innerHTML = 'üìà';
                percentageTrend.className = 'stat-trend up';
                document.getElementById('percentage-untung-rugi').querySelector('span').style.color = 'var(--success-color)';
            } else {
                percentageTrend.innerHTML = '‚ûñ';
                percentageTrend.className = 'stat-trend';
                document.getElementById('percentage-untung-rugi').querySelector('span').style.color = 'var(--text-primary)';
            }

            document.getElementById('avg-asset-gold-gr').textContent = formatRp(summary.avgAssetGoldGr);
        }

        // Fungsi untuk membuat atau mengupdate grafik
        function renderCharts(summary) {
            const lineCtx = document.getElementById('lineChart').getContext('2d');
            const barCtx = document.getElementById('barChart').getContext('2d');
            const labels = summary.chartData.map(d => d.tanggal);
            
            // Line Chart
            if (lineChartInstance) lineChartInstance.destroy();
            
            lineChartInstance = new Chart(lineCtx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: '‚ú® Estimasi Harga Jual',
                            data: summary.chartData.map(d => d.estimasiJual),
                            borderColor: '#f59e0b',
                            backgroundColor: 'rgba(245, 158, 11, 0.1)',
                            fill: true,
                            tension: 0.4,
                            borderWidth: 2,
                            pointBackgroundColor: '#f59e0b',
                            pointBorderColor: '#fff',
                            pointBorderWidth: 2,
                            pointRadius: 4,
                            pointHoverRadius: 6
                        },
                        {
                            label: 'üí∞ Nominal Beli',
                            data: summary.chartData.map(d => d.nominalBeli),
                            borderColor: '#3b82f6',
                            backgroundColor: 'rgba(59, 130, 246, 0.1)',
                            fill: true,
                            tension: 0.4,
                            borderWidth: 2,
                            pointBackgroundColor: '#3b82f6',
                            pointBorderColor: '#fff',
                            pointBorderWidth: 2,
                            pointRadius: 4,
                            pointHoverRadius: 6
                        }
                    ]
                },
                options: { 
                    responsive: true, 
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            labels: {
                                color: '#64748b',
                                font: { weight: '500' }
                            }
                        }
                    },
                    scales: {
                        x: {
                            ticks: { color: '#64748b' },
                            grid: { color: '#e2e8f0' }
                        },
                        y: {
                            ticks: { color: '#64748b' },
                            grid: { color: '#e2e8f0' }
                        }
                    }
                }
            });

            // Bar Chart
            if (barChartInstance) barChartInstance.destroy();
            
            barChartInstance = new Chart(barCtx, {
                type: 'bar',
                data: {
                    labels: ['üí∞ Modal', 'üíé Nilai Jual'],
                    datasets: [{
                        label: 'Nilai (Rp)',
                        data: [summary.totalModal, summary.totalNilaiJual],
                        backgroundColor: ['#3b82f6', '#f59e0b'],
                        borderColor: ['#2563eb', '#d97706'],
                        borderWidth: 1,
                        borderRadius: 8,
                        borderSkipped: false
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: { 
                        legend: { display: false }
                    },
                    scales: {
                        x: {
                            ticks: { color: '#64748b' },
                            grid: { display: false }
                        },
                        y: {
                            ticks: { color: '#64748b' },
                            grid: { color: '#e2e8f0' }
                        }
                    }
                }
            });
        }

        // Fungsi untuk mengupdate progress bar
        function updateProgressBars() {
            if (!summaryDataCache) return;

            const targetEmas = parseFloat(document.getElementById('target-emas').value) || 0;
            const targetJual = parseFloat(document.getElementById('target-jual').value) || 0;

            const progressEmas = targetEmas > 0 ? (summaryDataCache.totalAssetGr / targetEmas) * 100 : 0;
            const progressJual = targetJual > 0 ? (summaryDataCache.totalNilaiJual / targetJual) * 100 : 0;
            
            const emasPercent = Math.min(progressEmas, 100);
            const jualPercent = Math.min(progressJual, 100);

            document.getElementById('progress-emas-inner').style.width = `${emasPercent}%`;
            document.getElementById('progress-emas-label').textContent = `${emasPercent.toFixed(1)}%`;
            document.getElementById('progress-jual-inner').style.width = `${jualPercent}%`;
            document.getElementById('progress-jual-label').textContent = `${jualPercent.toFixed(1)}%`;
        }

        // Mock data untuk demo
        // function getMockData()
        //    {
        //     return {
        //         totalAssetGr,
        //         totalModal,
        //         totalNilaiJual,
        //         floatingUntungRugi,
        //         percentageUntungRugi,
        //         avgAssetGoldGr,
        //         chartData
        //     };
        // }

        // Fungsi utama untuk memuat semua data dashboard
        // Fungsi utama untuk memuat semua data dashboard dari server
function loadDashboardData() {
    document.getElementById('dashboard-loader').style.display = 'block';
    document.getElementById('dashboard-content').style.display = 'none';

    google.script.run
        .withSuccessHandler(function(summary) {
            summaryDataCache = summary;
            updateStatCards(summary);
            renderCharts(summary);
            updateProgressBars();

            document.getElementById('dashboard-loader').style.display = 'none';
            document.getElementById('dashboard-content').style.display = 'block';
        })
        .withFailureHandler(function(error) {
            document.getElementById('dashboard-loader').innerHTML = `
                <div style="color: red;">‚ùå Gagal memuat data dashboard: ${error.message}</div>
            `;
            console.error("Gagal load data:", error);
        })
        .getDashboardSummary(); // Panggil fungsi dari code.gs
}

        // Panggil fungsi saat halaman dimuat
        loadDashboardData();
    </script>
</body>
</html>